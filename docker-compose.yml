version: "3"

services:
  web:
    image: magento/magento-cloud-docker-nginx:latest-1.2
    ports:
      - "80:8080"
      - "443:443"
    environment:
      - MAGENTO_RUN_MODE=developer
    volumes:
      - magento-data:/app
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      # - ./src/nginx.conf.sample:/etc/nginx/nginx.conf:ro
      # - ./src:/usr/share/nginx/html
    networks:
      - frontend
      - backend
    depends_on:
      - fpm

  fpm:
    image: magento/magento-cloud-docker-php:7.4-fpm-1.2
    volumes:
      - magento-data:/app
    networks:
      - frontend
      - backend
    depends_on:
      - composer
      - db
      - redis
      - elasticsearch

  magento:
    build: ./docker/magento-build
    # volumes:
    #   - magento-src:/app
    #   - magento-app-code:/var/magento/app/code
    #   - magento-app-design:/var/magento/app/design
    #   - ./docker/magento-build/auth.json:/root/.composer/auth.json
    # command: ["composer", "create-project", "--repository=https://repo.magento.com/", "magento/project-community-edition=2.4.0", "/app"]
    networks:
      - backend
    depends_on:
      - db
      - redis
      - elasticsearch
      - rabbitmq

  redis:
    image: redis
    networks:
      - backend

  db:
    image: mysql:8
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - .env
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend

  elasticsearch:
    image: elasticsearch:7.9.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - frontend
      - backend

  rabbitmq:
    image: rabbitmq
    # env_file:
    #   - .env
    ports:
      - "5672:5672"
    networks:
      - backend

volumes:
  magento-data:
  elasticsearch-data:
  db-data:

networks:
  frontend:
  backend:
    driver: bridge
